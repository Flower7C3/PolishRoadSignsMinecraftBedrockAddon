name: Test Build Process

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Validate project structure
      run: |
        echo "Checking project structure..."
        test -f build_mcaddon.py || exit 1
        test -f build_mcpack.py || exit 1
        test -d BP || exit 1
        test -d RP || exit 1
        test -f BP/manifest.json || exit 1
        test -f RP/manifest.json || exit 1
        echo "✅ Project structure is valid"
        
    - name: Validate manifests
      run: |
        echo "Validating manifests..."
        python3 -c "
        import json
        import sys
        
        # Check BP manifest
        with open('BP/manifest.json', 'r') as f:
            bp_manifest = json.load(f)
        print(f'BP version: {bp_manifest.get(\"header\", {}).get(\"version\", \"missing\")}')
        
        # Check RP manifest
        with open('RP/manifest.json', 'r') as f:
            rp_manifest = json.load(f)
        print(f'RP version: {rp_manifest.get(\"header\", {}).get(\"version\", \"missing\")}')
        
        # Check if versions match
        bp_version = bp_manifest.get('header', {}).get('version', [])
        rp_version = rp_manifest.get('header', {}).get('version', [])
        
        if bp_version != rp_version:
            print('❌ Version mismatch between BP and RP manifests')
            sys.exit(1)
        else:
            print('✅ Manifest versions match')
        "
        
    - name: Test build process
      run: |
        echo "Testing build process..."
        python3 build_mcaddon.py
        python3 build_mcpack.py
        
        # Check if files were created
        test -f dist/*.mcaddon || exit 1
        test -f dist/*.mcpack || exit 1
        echo "✅ Build process completed successfully"
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts
        path: dist/
        retention-days: 7 